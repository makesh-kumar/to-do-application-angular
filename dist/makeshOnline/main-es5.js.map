{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Footer/footer.component.ts","webpack:///src/app/Footer/footer.component.html","webpack:///src/app/Header/header.component.ts","webpack:///src/app/Header/header.component.html","webpack:///src/app/Login/login.component.ts","webpack:///src/app/Login/login.component.html","webpack:///src/app/api-caller.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/to-do-body/to-do-body.component.ts","webpack:///src/app/to-do-body/to-do-body.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","FooterComponent","selector","templateUrl","styleUrls","HeaderComponent","router","localStorage","isMobileNavBar","confirm","clear","navigate","goHome","goSettings","goProfile","logout","showMobNavBar","LoginComponent","formBuilder","apiService","_snackBar","loginPassType","registerPassType","registerConfirmPassType","initLoginForm","initRegisterForm","loginForm","group","emailId","required","password","registerForm","name","minLength","confirmPassword","fieldName","controls","dirty","status","value","valid","loginData","navigateByUrl","Object","forEach","key","get","markAsDirty","console","log","ngOnInit","isShowLoginPassword","isShowRegisterPassword","isShowRegisterConfirmPassword","toggleTab","submitForm","submitRegisterForm","ApiCallerService","http","handleErr","error","baseUrl","pipe","userId","data","post","email","s","word","cat","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","provide","useClass","animationType","circleSwish","backdropBackgroundColour","backdropBorderRadius","primaryColour","secondaryColour","tertiaryColour","declarations","providers","bootstrap","schemas","ToDoBodyComponent","viewData","savedData","showAddSection","initToDoForm","getData","showViewSection","link","document","createElement","setAttribute","encodeURIComponent","content","click","open","duration","toDoForm","toDoData","dataId","Math","floor","random","description","dtm","Date","getDate","getMonth","getFullYear","toLocaleTimeString","toDo","selectedToDo","filter","info","showAdd","showView","deleteToDo","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css'],\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<footer class=\"bg-rebeccapurple text-center text-white\">\n  <div class=\"container p-4 pb-0\">\n    <section class=\"mb-4\">\n      <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"><i class=\"fab fa-facebook-f\"></i></a>\n      <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"><i class=\"fab fa-twitter\"></i></a>\n      <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"><i class=\"far fa-envelope\"></i></a>\n      <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"><i class=\"fab fa-instagram\"></i></a>\n      <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"><i class=\"fab fa-linkedin-in\"></i></a>\n      <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"><i class=\"fab fa-github\"></i></a>\n      <a class=\"btn btn-outline-light btn-floating m-1\" href=\"#!\" role=\"button\"><i class=\"fas fa-phone\"></i></a>\n    </section>\n  </div>\n  <div class=\"text-center p-3\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\n    © Designed & Developed by Makesh😎\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalStorage } from '@ngx-pwa/local-storage';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  constructor(private router: Router, private localStorage: LocalStorage) {}\n\n  public isMobileNavBar: boolean;\n\n  ngOnInit(): void {\n    this.isMobileNavBar = false;\n  }\n\n  showMobNavBar(): void {\n    this.isMobileNavBar = !this.isMobileNavBar;\n  }\n\n  logout(): void {\n    if (confirm('Are you sure ? ')) {\n      localStorage.clear();\n      this.router.navigate(['/login']);\n    }\n\n    // swal({\n    //   text: 'Are you sure ?',\n    //   buttons: ['No', 'Yes, Logout'],\n    // }).then((result) => {\n    //   if (result) {\n    //     localStorage.clear();\n    //     this.router.navigate(['/login']);\n    //     swal('Logout Success !', {\n    //       timer: 3000,\n    //     });\n    //   }\n    // });\n  }\n\n  goHome(): void {\n    // this.router.navigateByUrl('/home');\n  }\n\n  goProfile(): void {\n    // this.router.navigateByUrl('/profile');\n  }\n\n  goSettings(): void {\n    // this.router.navigateByUrl('/settings');\n  }\n}\n","<div class=\"nav-bar\">\n  <!--Navbar for desktop-->\n  <div class=\"nav-bar__desktop\">\n    <mat-toolbar class=\"brand__title\">\n      <button mat-icon-button (click)=\"goHome()\">\n        <!-- <img src=\"favicon (1).ico\"> -->\n        <span class=\"brand__icon\">Makesh</span>\n      </button>\n      <span class=\"nav-bar__spacer\"></span>\n      <button mat-button (click)=\"goHome()\" class=\"nav-bar__icon\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Home\">home</mat-icon>\n        <span>Home</span>\n      </button>\n      <button mat-button (click)=\"goSettings()\" class=\"nav-bar__icon\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Settings\">settings</mat-icon>\n        <span>Settings</span>\n      </button>\n      <button mat-button (click)=\"goProfile()\" class=\"nav-bar__icon\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Profile\">person</mat-icon>\n        <span>Profile</span>\n      </button>\n      <button mat-button (click)=\"logout()\" class=\"nav-bar__icon\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Logout\">exit_to_app</mat-icon>\n        <span>Logout</span>\n      </button>\n    </mat-toolbar>\n  </div>\n\n  <!--Navbar for mobile-->\n  <div class=\"nav-bar__mobile\">\n    <mat-toolbar class=\"brand__title\">\n      <button (click)=\"goHome()\" mat-icon-button class=\"nav-bar__icon\">\n        <!-- <img src=\"favicon (1).ico\" width=\"50%\">  -->\n        <span class=\"brand__icon\">Makesh</span>\n      </button>\n      <span class=\"nav-bar__spacer\"></span>\n      <button mat-button (click)=\"showMobNavBar()\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Menu\">menu</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n      </mat-menu>\n    </mat-toolbar>\n\n    <mat-list *ngIf=isMobileNavBar>\n      <div class=\"divider\"></div>\n      <mat-list-item>\n        <button (click)=\"goHome()\" mat-button class=\"btn__list\">\n          <mat-icon aria-hidden=\"false\" aria-label=\"Home\">home</mat-icon>\n          <span>Home</span>\n        </button>\n      </mat-list-item>\n      <mat-list-item>\n        <button mat-button (click)=\"goProfile()\" class=\"btn__list\">\n          <mat-icon aria-hidden=\"false\" aria-label=\"Profile\">person</mat-icon>\n          <span>Profile</span>\n        </button>\n      </mat-list-item>\n      <mat-list-item>\n        <button (click)=\"goSettings()\" mat-button class=\"btn__list\">\n          <mat-icon aria-hidden=\"false\" aria-label=\"Settings\">settings</mat-icon>\n          <span>Settings</span>\n        </button>\n      </mat-list-item>\n      <mat-list-item>\n        <button mat-button class=\"btn__list\" (click)=\"logout()\">\n          <mat-icon aria-hidden=\"false\" aria-label=\"Logout\">exit_to_app</mat-icon>\n          <span>Logout</span>\n        </button>\n      </mat-list-item>\n    </mat-list>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ApiCallerService } from '../api-caller.service';\nimport { IILoginData } from '../Model/login-data';\nimport { ISignup } from '../Model/signup';\n@Component({\n  selector: 'app-alog',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private apiService: ApiCallerService,\n    private _snackBar: MatSnackBar\n  ) {}\n  public loginData: IILoginData;\n  public loggedUser: ISignup;\n  public loginForm: FormGroup;\n  public registerForm: FormGroup;\n  public loginPassType = 'password';\n  public registerPassType = 'password';\n  public registerConfirmPassType = 'password';\n  public isShowLoginPassword: boolean;\n\n  public isShowRegisterPassword: boolean;\n  public isShowRegisterConfirmPassword: boolean;\n\n  ngOnInit(): void {\n    this.initLoginForm();\n    this.initRegisterForm();\n  }\n\n  initLoginForm(): void {\n    this.loginForm = this.formBuilder.group({\n      emailId: ['test', Validators.required],\n      password: ['test', Validators.required],\n    });\n  }\n\n  initRegisterForm(): void {\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      emailId: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n  isFieldInvalid(fieldName: string): boolean {\n    return (\n      this.loginForm.controls[fieldName].dirty &&\n      this.loginForm.controls[fieldName].status == 'INVALID'\n    );\n    // return this.loginForm.controls[fieldName].dirty && this.loginForm.controls[fieldName].status == \"INVALID\"\n  }\n\n  isRegisterFieldValid(fieldName: string): boolean {\n    return (\n      this.registerForm.controls[fieldName].dirty &&\n      this.registerForm.controls[fieldName].status == 'INVALID'\n    );\n    // return this.loginForm.controls[fieldName].dirty && this.loginForm.controls[fieldName].status == \"INVALID\"\n  }\n\n  isConfirmPasswordMatches() {\n    return (\n      this.registerForm.controls.confirmPassword.dirty &&\n      this.registerForm.controls.password.value !==\n        this.registerForm.controls.confirmPassword.value\n    );\n  }\n  submitForm() {\n    if (this.loginForm.valid) {\n      this.loginData = {\n        emailId: this.loginForm.controls.emailId.value,\n        password: this.loginForm.controls.password.value,\n      };\n      // this.loginData.emailId = this.loginForm.controls.emailId.value;\n      // this.loginData.password = this.loginForm.controls.password.value;\n\n      // localStorage.setItem('userid', this.loggedUser.email);\n      // localStorage.setItem('name', this.loggedUser.name);\n      // localStorage.setItem('password', this.loggedUser.pass);\n      this.router.navigateByUrl('/home');\n      // API ISSUE\n      // this.apiService.isUser(this.loginData.emailId).subscribe(\n      //   (data) => {\n      //     if (data === null) {\n      //       this._snackBar.open('Email not registered !', '❌', {\n      //         duration: 2000,\n      //       });\n      //     } else {\n      //       this.loggedUser = data;\n      //       if (this.loggedUser.pass !== this.loginData.password) {\n      //         this._snackBar.open('Password wrong !', '❌', {\n      //           duration: 2000,\n      //         });\n      //       } else {\n      //         this._snackBar.open('Login Success!', '✔️', {\n      //           duration: 2000,\n      //         });\n      //         localStorage.setItem('userid', this.loggedUser.email);\n      //         localStorage.setItem('name', this.loggedUser.name);\n      //         localStorage.setItem('password', this.loggedUser.pass);\n      //         this.router.navigateByUrl('/home');\n      //       }\n      //     }\n      //   },\n      //   (error) => {\n      //     alert('user not found !');\n      //   }\n      // );\n    } else {\n      Object.keys(this.loginForm.controls).forEach((key) => {\n        this.loginForm.get(key).markAsDirty();\n      });\n      //  this.loginForm.markAsDirty();\n    }\n  }\n\n  submitRegisterForm() {\n    if (this.registerForm.valid) {\n    } else {\n      Object.keys(this.registerForm.controls).forEach((key) => {\n        this.registerForm.get(key).markAsDirty();\n      });\n    }\n  }\n  toggleTab() {\n    console.log('tttt');\n    this.ngOnInit();\n  }\n  showLoginPassword() {\n    this.isShowLoginPassword = !this.isShowLoginPassword;\n    if (this.loginPassType === 'password') {\n      this.loginPassType = 'text';\n    } else {\n      this.loginPassType = 'password';\n    }\n  }\n  showRegisterPassword() {\n    this.isShowRegisterPassword = !this.isShowRegisterPassword;\n    if (this.registerPassType === 'password') {\n      this.registerPassType = 'text';\n    } else {\n      this.registerPassType = 'password';\n    }\n  }\n  showRegisterConfirmassword() {\n    this.isShowRegisterConfirmPassword = !this.isShowRegisterConfirmPassword;\n    if (this.registerConfirmPassType === 'password') {\n      this.registerConfirmPassType = 'text';\n    } else {\n      this.registerConfirmPassType = 'password';\n    }\n  }\n}\n","<div class=\"login\">\n  <mat-card class=\"login-form__card\">\n    <mat-tab-group mat-align-tabs=\"center\">\n      <mat-tab label=\"Login\" (click)=\"toggleTab()\">\n        <mat-card-content class=\"card__content\" [formGroup]=\"loginForm\">\n          <div class=\"form-outline\">\n            <i class=\"fas fa-user index__icon\"></i>\n            <input type=\"text\" id=\"form1\" class=\"form-control\" formControlName=\"emailId\" placeholder=\"User Name\" />\n            <p *ngIf=\"isFieldInvalid('emailId')\" class=\"error__message\">Please enter email</p>\n          </div>\n          <div class=\"form-outline\">\n            <i class=\"fas fa-unlock index__icon\"></i>\n            <input [type]=\"loginPassType\" id=\"form1\" formControlName=\"password\" class=\"form-control\"\n              placeholder=\"Password\" />\n            <p *ngIf=\"isFieldInvalid('password')\" class=\"error__message\">Please enter password</p>\n            <a *ngIf=\"isShowLoginPassword\" href=\"#!\" (click)=\"showLoginPassword()\" role=\"button\"><i\n                class=\"fas fa-eye hint__icon\"></i></a>\n            <a *ngIf=\"!isShowLoginPassword\" href=\"#!\" (click)=\"showLoginPassword()\" role=\"button\"><i\n                class=\"fas fa-eye-slash hint__icon\"></i></a>\n          </div>\n          <button (click)=\"submitForm()\" type=\"button\" class=\"btn btn-outline-success btn-floating\"\n            data-mdb-ripple-color=\"red\">\n            <i class=\"fas fa-sign-in-alt\"></i>\n            Login\n          </button>\n        </mat-card-content>\n      </mat-tab>\n      <mat-tab label=\"Register\" (click)=\"toggleTab()\">\n        <mat-card-content class=\"card__content\" [formGroup]=\"registerForm\">\n          <div class=\"form-outline\">\n            <i class=\"fas fa-user index__icon\"></i>\n            <input type=\"text\" id=\"form1\" formControlName=\"name\" class=\"form-control\" placeholder=\"Full Name\" />\n            <p *ngIf=\"isRegisterFieldValid('name')\" class=\"error__message\">Please enter full name</p>\n          </div>\n          <div class=\"form-outline\">\n            <i class=\"fas fa-envelope-square index__icon\"></i>\n            <input type=\"text\" formControlName=\"emailId\" id=\"form1\" class=\"form-control\" placeholder=\"Email\" />\n            <p *ngIf=\"isRegisterFieldValid('emailId')\" class=\"error__message\">Please enter valid email</p>\n          </div>\n          <div class=\"form-outline\">\n            <i class=\"fas fa-unlock index__icon\"></i>\n            <input [type]=\"registerPassType\" id=\"form1\" formControlName=\"password\" class=\"form-control\"\n              placeholder=\"Password\" />\n            <p *ngIf=\"isRegisterFieldValid('password')\" class=\"error__message\">Password should contain min 6 chars</p>\n            <a *ngIf=\"!isShowRegisterPassword\" href=\"#!\" (click)=\"showRegisterPassword()\" role=\"button\"><i\n                class=\"fas fa-eye hint__icon\"></i></a>\n            <a *ngIf=\"isShowRegisterPassword\" href=\"#!\" (click)=\"showRegisterPassword()\" role=\"button\"><i\n                class=\"fas fa-eye-slash hint__icon\"></i></a>\n          </div>\n          <div class=\"form-outline\">\n            <i class=\"fas fa-unlock index__icon\"></i>\n            <input [type]=\"registerConfirmPassType\" id=\"form1\" formControlName=\"confirmPassword\" class=\"form-control\"\n              placeholder=\"Confirm Password\" />\n            <p *ngIf=\"isConfirmPasswordMatches()\" class=\"error__message\">Password Mismatch</p>\n            <a *ngIf=\"!isShowRegisterConfirmPassword\" href=\"#!\" (click)=\"showRegisterConfirmassword()\" role=\"button\"><i\n                class=\"fas fa-eye hint__icon\"></i></a>\n            <a *ngIf=\"isShowRegisterConfirmPassword\" href=\"#!\" (click)=\"showRegisterConfirmassword()\" role=\"button\"><i\n                class=\"fas fa-eye-slash hint__icon\"></i></a>\n          </div>\n          <button (click)=\"submitRegisterForm()\" type=\"button\" class=\"btn btn-outline-success btn-floating\"\n            data-mdb-ripple-color=\"red\">\n            <i class=\"far fa-check-circle\"></i>\n            Register\n          </button>\n        </mat-card-content>\n      </mat-tab>\n    </mat-tab-group>\n  </mat-card>\n</div>\n","import { ISignup } from './Model/signup';\n// import { ITododata } from './Model/Tododata';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\n// import { ILoginData } from './Model/login-data';\nimport { catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiCallerService {\n  baseUrl: string;\n  constructor(private http: HttpClient, private router: Router) {\n    this.baseUrl = 'https://mydemoapi.herokuapp.com';\n    // this.baseUrl = 'http://localhost:8080'\n  }\n\n  //  headers;\n  // setHttpHeader()\n  // {\n  //  this.headers = new HttpHeaders().set('Accept', 'application/json').set('Content-Type', 'application/json');\n  // let options = this.headers: headers: any;\n  // return options;}\n\n  // To handle the http error response\n  handleErr = (error: HttpErrorResponse) => {\n    if (error.status === 0) {\n      this.router.navigate(['error']);\n    }\n    if (error.status === 200) {\n    }\n    return throwError(error.status);\n    // return throwError(error.status);\n  };\n\n  public getCovidResult() {\n    return this.http\n      .get('https://corona.lmao.ninja/v2/countries')\n      .pipe(catchError(this.handleErr));\n  }\n\n  public getData(userId: string): Observable<any> {\n    return this.http\n      .get<any>(this.baseUrl + '/getData/' + userId)\n      .pipe(catchError(this.handleErr));\n  }\n\n  public addData(data) {\n    return this.http\n      .post(this.baseUrl + '/addData', data)\n      .pipe(catchError(this.handleErr));\n  }\n\n  // public login(data: ILoginData ){\n  // //\n\n  //   return this.http.post<ILoginData>(this.baseUrl + '/login', data).pipe(\n  //     catchError(\n  //       this.handleErr\n  //     )\n  //   );\n  // }\n\n  public isUser(email: string) {\n    return this.http\n      .get<ISignup>(this.baseUrl + '/isUser/' + email)\n      .pipe(catchError(this.handleErr));\n  }\n\n  public updateProfile(s: ISignup) {\n    return this.http\n      .post<ISignup>(this.baseUrl + '/updateProfile', s)\n      .pipe(catchError(this.handleErr));\n  }\n  public changePassword(s: ISignup) {\n    return this.http\n      .post<ISignup>(this.baseUrl + '/changePassword', s)\n      .pipe(catchError(this.handleErr));\n  }\n\n  public getDict(word: string): Observable<any> {\n    return this.http\n      .get<any>(\n        'https://dictionaryapi.com/api/v3/references/thesaurus/json/' +\n          word +\n          '?key=9cce3a89-5ff5-4b47-8312-261a840929ec'\n      )\n      .pipe(catchError(this.handleErr));\n  }\n\n  public getMovieList(word: string): Observable<any> {\n    return this.http\n      .get<any>('http://www.omdbapi.com/?apikey=65b53502&s=' + word)\n      .pipe(catchError(this.handleErr));\n  }\n\n  public getMovie(word: string): Observable<any> {\n    return this.http\n      .get<any>('http://www.omdbapi.com/?apikey=65b53502&i=' + word)\n      .pipe(catchError(this.handleErr));\n  }\n\n  // return this.http.get<AdminOutbox[]>(this.baseUrl + '/getAdminOutbox', { headers }).pipe(\n  //   catchError(\n  //     this.handleErr\n  //   )\n  // );\n\n  public sign(data: ISignup) {\n    return this.http\n      .post<ISignup>(this.baseUrl + '/signUp', data)\n      .pipe(catchError(this.handleErr));\n  }\n  public deleteData(data) {\n    return this.http\n      .post(this.baseUrl + '/deleteData', data)\n      .pipe(catchError(this.handleErr));\n  }\n\n  // public getAllPlayer(name: string): Observable<any>{\n  //   return this.http.get<any>('https://cricapi.com/api/playerFinder?apikey=0iGk3p0W8XZzlDPqE3qnzie5HYT2&name='+name);\n  // }\n\n  public getNews(): Observable<any> {\n    return this.http.get<any>(\n      'http://newsapi.org/v2/top-headlines?country=in&apiKey=072b62dc3937448f97f96d362878e22d'\n    );\n  }\n\n  public getNews2(): Observable<any> {\n    return this.http\n      .get<any>(this.baseUrl + '/getNews')\n      .pipe(catchError(this.handleErr));\n  }\n\n  public getNewsOf(cat: string): Observable<any> {\n    return this.http\n      .get<any>(this.baseUrl + '/getNewsOf/' + cat)\n      .pipe(catchError(this.handleErr));\n  }\n\n  public getAllPlayer(name: string): Observable<any> {\n    return this.http.get<any>(\n      'https://cricapi.com/api/playerFinder?apikey=0iGk3p0W8XZzlDPqE3qnzie5HYT2&name=' +\n        name\n    );\n  }\n\n  public getOnePlayer(id: string): Observable<any> {\n    return this.http.get<any>(\n      'https://cricapi.com/api/playerStats?apikey=0iGk3p0W8XZzlDPqE3qnzie5HYT2&pid=' +\n        id\n    );\n  }\n\n  // public addData(id: number, name: string, dept: string){\n  //   console.log('addedd');\n  //   return this.http.post<any>('https://mydemoapi.herokuapp.com/add/'+id+'/'+name+'/'+'dept',null);\n  //   // console.log('addedd');\n  // }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ToDoBodyComponent } from './to-do-body/to-do-body.component';\nimport { LoginComponent } from './Login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'home', component: ToDoBodyComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { OnInit } from '@angular/core';\nimport { Component } from '@angular/core';\n// test changes ..\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit {\n\n  title = 'makesh.online';\n\n  ngOnInit(): void {\n    console.log('*** makesh.online ***');\n    console.log('*** Developed & Designed by - Makesh ***');\n  }\n}\n","<router-outlet></router-outlet>\n","import { HeaderComponent } from './Header/header.component';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FooterComponent } from './Footer/footer.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Title } from '@angular/platform-browser';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { ToDoBodyComponent } from './to-do-body/to-do-body.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { LoginComponent } from './Login/login.component';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    HeaderComponent,\n    ToDoBodyComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgxLoadingModule.forRoot({\n      animationType: ngxLoadingAnimationTypes.circleSwish,\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)',\n      backdropBorderRadius: '60px',\n      primaryColour: '#ffffff',\n      secondaryColour: '#ffffff',\n      tertiaryColour: '#ffffff',\n    }),\n\n    BrowserModule,\n    NgxPaginationModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatSliderModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n\n    MatPaginatorModule,\n    MatIconModule,\n    MatTabsModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatSortModule,\n    MatListModule,\n    MatGridListModule,\n    MatBadgeModule,\n    MatButtonToggleModule,\n    MatDialogModule,\n    ClipboardModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatSnackBarModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  providers: [{ provide: LocationStrategy, useClass: HashLocationStrategy }],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ApiCallerService } from '../api-caller.service';\nimport { ITododata } from '../Model/tododata';\n\n@Component({\n  selector: 'app-to-do-body',\n  templateUrl: './to-do-body.component.html',\n  styleUrls: ['./to-do-body.component.less'],\n})\nexport class ToDoBodyComponent implements OnInit {\n  constructor(\n    private router: Router,\n    // tslint:disable-next-line: variable-name\n    private _snackBar: MatSnackBar,\n    private apiService: ApiCallerService,\n    private formBuilder: FormBuilder\n  ) {}\n  public viewData: ITododata[] = [];\n  public savedData: ITododata[] = [];\n  public toDoData: ITododata;\n  public showAddSection: boolean;\n  public showViewSection: boolean;\n  public toDoForm: FormGroup;\n  public isToDoListEmpty: boolean;\n\n  public selectedToDo: ITododata;\n  ngOnInit(): void {\n    // if (localStorage.length === 0) {\n    //   this.router.navigate(['/login']);\n    // }\n    this.showAddSection = true;\n    this.initToDoForm();\n    this.getData();\n  }\n\n  toggleView() {\n    if (this.showViewSection) {\n      this.showViewSection = false;\n      this.showAddSection = true;\n    } else if (this.showAddSection) {\n      this.showViewSection = true;\n      this.showAddSection = false;\n    }\n  }\n\n  showAdd() {\n    this.initToDoForm();\n    this.showAddSection = true;\n    this.showViewSection = false;\n  }\n  showView() {\n    this.getData();\n    this.showViewSection = true;\n    this.showAddSection = false;\n  }\n\n  downloadInnerHtml(data: ITododata) {\n    const link = document.createElement('a');\n    link.setAttribute('download', data.title);\n    link.setAttribute(\n      'href',\n      'data:' +\n        'text/plain' +\n        ';charset=utf-8,' +\n        encodeURIComponent(data.content)\n    );\n    link.click();\n    this._snackBar.open('Download started !', '✔️', {\n      duration: 2000,\n    });\n  }\n\n  getData() {\n    this.viewData = [...this.viewData];\n\n    // this.isToDoListEmpty = true;\n    // this.apiService\n    //   .getData(localStorage.getItem('userid'))\n    //   .subscribe((data) => {\n    //     this.viewData = data;\n    //     if(this.viewData.length === 0){  this.isToDoListEmpty = true;}\n    //     else{ this.isToDoListEmpty = false}\n    //   });\n  }\n\n  addToDo() {\n    if (this.toDoForm.valid) {\n      this.toDoData = {\n        userId: 'test',\n        dataId: Math.floor(Math.random() * 1000 + 1),\n        content: this.toDoForm.controls.description.value,\n        title: this.toDoForm.controls.title.value,\n        dtm:\n          new Date().getDate() +\n          '/' +\n          (new Date().getMonth() + 1) +\n          '/' +\n          new Date().getFullYear() +\n          ' || ' +\n          new Date().toLocaleTimeString(),\n      };\n      this.viewData = [...this.viewData, this.toDoData];\n      // this.savedData = [...this.savedData, this.toDoData];\n      console.log(this.viewData);\n      this._snackBar.open('Notes saved sucessfully !', '✔️', {\n        duration: 2000,\n      });\n      this.initToDoForm();\n\n      // API issue\n      // this.apiService.addData(this.toDoData).subscribe(\n      //   (response) => {\n      //     if (response) {\n      //       this._snackBar.open('Notes saved sucessfully !', '✔️', {\n      //         duration: 2000,\n      //       });\n      //       this.initToDoForm();\n      //       this.getData();\n      //     } else {\n      //       this._snackBar.open('Error Occured while saving !', '❌', {\n      //         duration: 2000,\n      //       });\n      //     }\n      //   },\n      //   (error) => {\n      //     if (error) {\n      //       this._snackBar.open('Notes saved sucessfully !', '✔️', {\n      //         duration: 2000,\n      //       });\n      //       this.initToDoForm();\n      //       this.getData();\n      //     } else {\n      //       this._snackBar.open('Error Occured while saving !', '❌', {\n      //         duration: 2000,\n      //       });\n      //     }\n      //   }\n      // );\n    } else {\n      this._snackBar.open('Please enter all fields !', '❌', {\n        duration: 2000,\n      });\n    }\n  }\n\n  initToDoForm() {\n    this.toDoForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n    });\n  }\n  showConfirmDelete(toDo: ITododata) {\n    this.selectedToDo = toDo;\n  }\n  deleteToDo() {\n    this.viewData = this.viewData.filter((data) => {\n      return this.selectedToDo.dataId !== data.dataId;\n    });\n\n    // API issue\n    // this.apiService.deleteData(this.selectedToDo).subscribe(\n    //   (response) => {\n    //     this._snackBar.open('Notes deleted sucessfully !', '✔️', {\n    //       duration: 2000,\n    //     });\n    //     this.getData();\n    //   },\n    //   (err) => {\n    //     this._snackBar.open('Notes deleted sucessfully !', '✔️', {\n    //       duration: 2000,\n    //     });\n    //     this.getData();\n    //   }\n    // );\n  }\n  copyContent() {\n    this._snackBar.open('Copied to clipboard !', '✔️', {\n      duration: 2000,\n    });\n  }\n  showInfo(info: string) {\n    this._snackBar.open('Created on ' + info, '✔️', {\n      duration: 2000,\n    });\n  }\n}\n","<app-header></app-header>\n<div class=\"body\">\n  <div class=\"body__add\">\n    <button (click)=\"showAdd()\" type=\"button\" class=\"btn btn-outline-success btn-floating\" data-mdb-ripple-color=\"red\">\n      <i class=\"fas fa-plus\"></i>\n      Add New ToDo\n    </button>\n  </div>\n  <div class=\"body__view\">\n    <button (click)=\"showView()\" type=\"button\" class=\"btn btn-outline-success btn-floating\" data-mdb-ripple-color=\"red\">\n      <i class=\"far fa-list-alt\"></i>\n      View\n    </button>\n  </div>\n</div>\n\n<div class=\"add__section\" *ngIf=\"showAddSection\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"section__input\" [formGroup]=\"toDoForm\">\n        <div class=\"form-outline\">\n          <label class=\"form-label\" for=\"form1\">About</label>\n          <input type=\"text\" id=\"form1\" formControlName=\"title\" class=\"form-control\" />\n        </div>\n        <div class=\"form-outline\">\n          <label class=\"form-label\" for=\"textAreaExample\">Description</label>\n          <textarea class=\"form-control\" formControlName=\"description\" id=\"textAreaExample\" rows=\"4\"></textarea>\n        </div>\n      </div>\n      <button (click)=\"addToDo()\" type=\"button\" class=\"btn btn-outline-success btn-floating\"\n        data-mdb-ripple-color=\"red\">\n        <i class=\"far fa-save\"></i>\n        Save\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"edit__section\" *ngIf=\"showViewSection\">\n  <div class=\"col-sm-6\" *ngIf=\"isToDoListEmpty\">\n    <div class=\"card section__empty\">\n      <div class=\"card-body\">\n        No Notes Added\n      </div>\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"!isToDoListEmpty\">\n    <ng-container *ngFor=\"let item of viewData\">\n      <div class=\"col-sm-6\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{item.title}} <span matTooltip=\"Completed\" class=\"card__check-box\">\n                <mat-checkbox class=\"example-margin\" [checked]=\"true\" [color]=\" 'primary'\" disabled>\n                </mat-checkbox>\n              </span> </h5>\n            <p class=\"card-text\">\n              {{item.content}}\n            </p>\n            <div class=\"action__icons\">\n              <a href=\"#!\" (click)=\"showInfo(item.dtm)\" [matTooltip]=item.dtm role=\"button\"><i\n                  class=\"fas fa-info-circle\"></i></a>\n              <a href=\"#!\" (click)=\"showConfirmDelete(item)\" matTooltip=\"Delete\" data-toggle=\"modal\"\n                data-target=\"#deleteModal\" role=\"button\"><i class=\"fas fa-trash\"></i></a>\n              <a href=\"#!\" (click)=\"copyContent()\" ngxClipboard [cbContent]=item.content matTooltip=\"Copy\"\n                role=\"button\"><i class=\"far fa-copy \"></i></a>\n              <a href=\"#!\" matTooltip=\"Edit\" role=\"button\" data-toggle=\"modal\" data-target=\"#editModal\"><i\n                  class=\"fas fa-edit\"></i></a>\n              <a href=\"#!\" (click)=\"downloadInnerHtml(item)\" matTooltip=\"Download\" role=\"button\"><i\n                  class=\"fas fa-download\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n\n<!--Delete Modal-->\n<div class=\"delete__modal\">\n  <div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteModalTitle\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h2 class=\"modal-title\" id=\"exampleModalLongTitle\">Confirm Delete</h2>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          Are you sure you want to delete ?\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n          <button (click)=\"deleteToDo()\" data-dismiss=\"modal\" type=\"button\"\n            class=\"btn btn-outline-success btn-floating\">\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!--Edit Modal-->\n<div class=\"edit__modal\">\n  <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h2 class=\"modal-title w-100\" id=\"myModalLabel\">EDIT</h2>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"add__section\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"section__input\">\n                  <div class=\"form-outline\">\n                    <label class=\"form-label\" for=\"form1\">About</label>\n                    <input type=\"text\" id=\"form1\" class=\"form-control\" />\n                  </div>\n                  <div class=\"form-outline\">\n                    <label class=\"form-label\" for=\"textAreaExample\">Description</label>\n                    <textarea class=\"form-control\" id=\"textAreaExample\" rows=\"4\"></textarea>\n                  </div>\n                </div>\n                <button type=\"button\" class=\"btn btn-outline-success btn-floating\" data-mdb-ripple-color=\"red\">\n                  <i class=\"far fa-save\"></i>\n                  Update\n                </button>\n                <mat-checkbox class=\"example-margin\" [checked]=\"false\" [color]=\" 'primary' \">Mark as completed\n                </mat-checkbox>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-footer></app-footer>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}